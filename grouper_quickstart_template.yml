apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: "grouper-quickstart"
  annotations:
    description: "Grouper Quickstart Deployment"
    iconClass: "icon-java"
    tags: "grouper"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: postgresql
    annotations:
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
  stringData:
    database-password: ${POSTGRESQL_PASSWORD}
    database-user: ${POSTGRESQL_USER}

- apiVersion: v1
  kind: Secret
  metadata:
    name: grouper
    annotations:
      template.openshift.io/expose-quickstart-pass: '{.data[''grouper-morphstring-encrypt-key'']}'
      template.openshift.io/expose-database-url: '{.data[''grouper-database-url'']}'
      template.openshift.io/expose-groupersystem-quickstart-pass: '{.data[''groupersystem-quickstart-pass'']}'
      template.openshift.io/expose-groupersystem-quickstart-user: '{.data[''groupersystem-quickstart-user'']}'
  stringData:
    grouper-morphstring-encrypt-key: ${GROUPER_MORPHSTRING_ENCRYPT_KEY}
    grouper-database-url: ${GROUPER_DATABASE_URL}
    groupersystem-quickstart-pass: ${GROUPERSYSTEM_QUICKSTART_PASS}
    groupersystem-quickstart-user: "GrouperSystem"

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
    name: postgresql
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Pod
  metadata:
    name: postgresql
    labels:
      name: postgresql
  spec:
    containers:
    - name: postgresql
      image: registry.redhat.io/rhel8/postgresql-10
      env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: postgresql
              key: database-user
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql
              key: database-password
        - name: POSTGRESQL_DATABASE
          value: grouper
      ports:
        - containerPort: 5432
          protocol: TCP

- apiVersion: v1
  kind: Pod
  metadata:
    name: grouper
    labels:
      name: grouper
  spec:
    containers:
      - name: grouper
        image: docker.io/i2incommon/grouper:5.6.0
        imagePullPolicy: IfNotPresent
        args:
          - quickstart
        env:
          - name: GROUPER_MORPHSTRING_ENCRYPT_KEY
            valueFrom:
              secretKeyRef:
                key: grouper-morphstring-encrypt-key
                name: grouper
          - name: GROUPER_DATABASE_URL
            value: jdbc:postgresql://postgresql:5432/grouper?currentSchema=public
          - name: GROUPER_DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-user
          - name: GROUPER_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: database-password
          - name: GROUPERSYSTEM_QUICKSTART_PASS
            valueFrom:
              secretKeyRef:
                key: groupersystem-quickstart-pass
                name: grouper
          - name: GROUPER_RUN_APACHE
            value: 'true'
          - name: GROUPER_RUN_TOMCAT
            value: 'true'
          - name: GROUPER_RUN_TOMEE
            value: 'true'
          - name: GROUPER_OPENSHIFT
            value: 'true'
        ports:
          - containerPort: 8080
            protocol: TCP
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - '-c'
              - curl --fail http://$(cat /etc/hostname):8080/grouper/status?diagnosticType=sources

- apiVersion: v1
  kind: Service
  metadata:
    name: grouper
    labels:
      name: grouper
  spec:
    ports:
    - name: grouper
      nodePort: 0
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: grouper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: grouper
  spec:
    path: /grouper
    to:
      kind: Service
      name: grouper
    port:
      targetPort: 8080

parameters:
- description: Username for PostgreSQL user that will be used for accessing the database.
  displayName: PostgreSQL Connection Username
  name: POSTGRESQL_USER
  value: grouper
  required: true
- description: Password for the PostgreSQL connection user.
  displayName: PostgreSQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_PASSWORD
  required: true
- description: Grouper morphstring encrypt key
  displayName: Grouper morphstring encrypt key
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: GROUPER_MORPHSTRING_ENCRYPT_KEY
  required: true
- description: Initial password for GrouperSystem user
  displayName: Grouper quickstart password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: GROUPERSYSTEM_QUICKSTART_PASS
  required: true
